<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20193.19.0821.2225                               -->
<workbook original-version='18.1' source-build='2019.3.0 (20193.19.0821.2225)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts ignorable='true' predowngraded='true' />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <SheetIdentifierTracking ignorable='true' predowngraded='true' />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='JC-201801-citibike-tripdata' inline='true' name='federated.019cx2c044cydd1dya39u1xqq341' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='JC-201801-citibike-tripdata' name='textscan.13urbz71n8spju0zk1pfo0yxp6s3'>
            <connection class='textscan' directory='C:/Users/Spring/Desktop/Tableau HW/Citibike_Datasets/JC-201801-citibike-tripdata.csv' filename='JC-201801-citibike-tripdata.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation all='true' name='JC-201801-citibike-tripdata.csv+' type='union'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='tripduration' />
            <column datatype='datetime' name='starttime' />
            <column datatype='datetime' name='stoptime' />
            <column datatype='integer' name='start station id' />
            <column datatype='string' name='start station name' />
            <column datatype='real' name='start station latitude' />
            <column datatype='real' name='start station longitude' />
            <column datatype='integer' name='end station id' />
            <column datatype='string' name='end station name' />
            <column datatype='real' name='end station latitude' />
            <column datatype='real' name='end station longitude' />
            <column datatype='integer' name='bikeid' />
            <column datatype='string' name='usertype' />
            <column datatype='date' date-parse-format='yyyy' name='birth year' />
            <column datatype='integer' name='gender' />
            <column datatype='string' name='Table Name' />
          </columns>
          <relation connection='textscan.13urbz71n8spju0zk1pfo0yxp6s3' name='JC-201801-citibike-tripdata.csv' table='[JC-201801-citibike-tripdata#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='tripduration' ordinal='0' />
              <column datatype='datetime' name='starttime' ordinal='1' />
              <column datatype='datetime' name='stoptime' ordinal='2' />
              <column datatype='integer' name='start station id' ordinal='3' />
              <column datatype='string' name='start station name' ordinal='4' />
              <column datatype='real' name='start station latitude' ordinal='5' />
              <column datatype='real' name='start station longitude' ordinal='6' />
              <column datatype='integer' name='end station id' ordinal='7' />
              <column datatype='string' name='end station name' ordinal='8' />
              <column datatype='real' name='end station latitude' ordinal='9' />
              <column datatype='real' name='end station longitude' ordinal='10' />
              <column datatype='integer' name='bikeid' ordinal='11' />
              <column datatype='string' name='usertype' ordinal='12' />
              <column datatype='integer' name='birth year' ordinal='13' />
              <column datatype='integer' name='gender' ordinal='14' />
            </columns>
          </relation>
          <relation connection='textscan.13urbz71n8spju0zk1pfo0yxp6s3' name='JC-201802-citibike-tripdata.csv' table='[JC-201802-citibike-tripdata#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='tripduration' ordinal='0' />
              <column datatype='datetime' name='starttime' ordinal='1' />
              <column datatype='datetime' name='stoptime' ordinal='2' />
              <column datatype='integer' name='start station id' ordinal='3' />
              <column datatype='string' name='start station name' ordinal='4' />
              <column datatype='real' name='start station latitude' ordinal='5' />
              <column datatype='real' name='start station longitude' ordinal='6' />
              <column datatype='integer' name='end station id' ordinal='7' />
              <column datatype='string' name='end station name' ordinal='8' />
              <column datatype='real' name='end station latitude' ordinal='9' />
              <column datatype='real' name='end station longitude' ordinal='10' />
              <column datatype='integer' name='bikeid' ordinal='11' />
              <column datatype='string' name='usertype' ordinal='12' />
              <column datatype='integer' name='birth year' ordinal='13' />
              <column datatype='integer' name='gender' ordinal='14' />
            </columns>
          </relation>
          <relation connection='textscan.13urbz71n8spju0zk1pfo0yxp6s3' name='JC-201803-citibike-tripdata.csv' table='[JC-201803-citibike-tripdata#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='tripduration' ordinal='0' />
              <column datatype='datetime' name='starttime' ordinal='1' />
              <column datatype='datetime' name='stoptime' ordinal='2' />
              <column datatype='integer' name='start station id' ordinal='3' />
              <column datatype='string' name='start station name' ordinal='4' />
              <column datatype='real' name='start station latitude' ordinal='5' />
              <column datatype='real' name='start station longitude' ordinal='6' />
              <column datatype='integer' name='end station id' ordinal='7' />
              <column datatype='string' name='end station name' ordinal='8' />
              <column datatype='real' name='end station latitude' ordinal='9' />
              <column datatype='real' name='end station longitude' ordinal='10' />
              <column datatype='integer' name='bikeid' ordinal='11' />
              <column datatype='string' name='usertype' ordinal='12' />
              <column datatype='integer' name='birth year' ordinal='13' />
              <column datatype='integer' name='gender' ordinal='14' />
            </columns>
          </relation>
          <relation connection='textscan.13urbz71n8spju0zk1pfo0yxp6s3' name='JC-201804-citibike-tripdata.csv' table='[JC-201804-citibike-tripdata#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='tripduration' ordinal='0' />
              <column datatype='datetime' name='starttime' ordinal='1' />
              <column datatype='datetime' name='stoptime' ordinal='2' />
              <column datatype='integer' name='start station id' ordinal='3' />
              <column datatype='string' name='start station name' ordinal='4' />
              <column datatype='real' name='start station latitude' ordinal='5' />
              <column datatype='real' name='start station longitude' ordinal='6' />
              <column datatype='integer' name='end station id' ordinal='7' />
              <column datatype='string' name='end station name' ordinal='8' />
              <column datatype='real' name='end station latitude' ordinal='9' />
              <column datatype='real' name='end station longitude' ordinal='10' />
              <column datatype='integer' name='bikeid' ordinal='11' />
              <column datatype='string' name='usertype' ordinal='12' />
              <column datatype='integer' name='birth year' ordinal='13' />
              <column datatype='integer' name='gender' ordinal='14' />
            </columns>
          </relation>
          <relation connection='textscan.13urbz71n8spju0zk1pfo0yxp6s3' name='JC-201805-citibike-tripdata.csv' table='[JC-201805-citibike-tripdata#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='tripduration' ordinal='0' />
              <column datatype='datetime' name='starttime' ordinal='1' />
              <column datatype='datetime' name='stoptime' ordinal='2' />
              <column datatype='integer' name='start station id' ordinal='3' />
              <column datatype='string' name='start station name' ordinal='4' />
              <column datatype='real' name='start station latitude' ordinal='5' />
              <column datatype='real' name='start station longitude' ordinal='6' />
              <column datatype='integer' name='end station id' ordinal='7' />
              <column datatype='string' name='end station name' ordinal='8' />
              <column datatype='real' name='end station latitude' ordinal='9' />
              <column datatype='real' name='end station longitude' ordinal='10' />
              <column datatype='integer' name='bikeid' ordinal='11' />
              <column datatype='string' name='usertype' ordinal='12' />
              <column datatype='integer' name='birth year' ordinal='13' />
              <column datatype='integer' name='gender' ordinal='14' />
            </columns>
          </relation>
          <relation connection='textscan.13urbz71n8spju0zk1pfo0yxp6s3' name='JC-201806-citibike-tripdata.csv' table='[JC-201806-citibike-tripdata#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='tripduration' ordinal='0' />
              <column datatype='datetime' name='starttime' ordinal='1' />
              <column datatype='datetime' name='stoptime' ordinal='2' />
              <column datatype='integer' name='start station id' ordinal='3' />
              <column datatype='string' name='start station name' ordinal='4' />
              <column datatype='real' name='start station latitude' ordinal='5' />
              <column datatype='real' name='start station longitude' ordinal='6' />
              <column datatype='integer' name='end station id' ordinal='7' />
              <column datatype='string' name='end station name' ordinal='8' />
              <column datatype='real' name='end station latitude' ordinal='9' />
              <column datatype='real' name='end station longitude' ordinal='10' />
              <column datatype='integer' name='bikeid' ordinal='11' />
              <column datatype='string' name='usertype' ordinal='12' />
              <column datatype='integer' name='birth year' ordinal='13' />
              <column datatype='integer' name='gender' ordinal='14' />
            </columns>
          </relation>
          <relation connection='textscan.13urbz71n8spju0zk1pfo0yxp6s3' name='JC-201807-citibike-tripdata.csv' table='[JC-201807-citibike-tripdata#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='tripduration' ordinal='0' />
              <column datatype='datetime' name='starttime' ordinal='1' />
              <column datatype='datetime' name='stoptime' ordinal='2' />
              <column datatype='integer' name='start station id' ordinal='3' />
              <column datatype='string' name='start station name' ordinal='4' />
              <column datatype='real' name='start station latitude' ordinal='5' />
              <column datatype='real' name='start station longitude' ordinal='6' />
              <column datatype='integer' name='end station id' ordinal='7' />
              <column datatype='string' name='end station name' ordinal='8' />
              <column datatype='real' name='end station latitude' ordinal='9' />
              <column datatype='real' name='end station longitude' ordinal='10' />
              <column datatype='integer' name='bikeid' ordinal='11' />
              <column datatype='string' name='usertype' ordinal='12' />
              <column datatype='integer' name='birth year' ordinal='13' />
              <column datatype='integer' name='gender' ordinal='14' />
            </columns>
          </relation>
          <relation connection='textscan.13urbz71n8spju0zk1pfo0yxp6s3' name='JC-201808-citibike-tripdata.csv' table='[JC-201808-citibike-tripdata#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='tripduration' ordinal='0' />
              <column datatype='datetime' name='starttime' ordinal='1' />
              <column datatype='datetime' name='stoptime' ordinal='2' />
              <column datatype='integer' name='start station id' ordinal='3' />
              <column datatype='string' name='start station name' ordinal='4' />
              <column datatype='real' name='start station latitude' ordinal='5' />
              <column datatype='real' name='start station longitude' ordinal='6' />
              <column datatype='integer' name='end station id' ordinal='7' />
              <column datatype='string' name='end station name' ordinal='8' />
              <column datatype='real' name='end station latitude' ordinal='9' />
              <column datatype='real' name='end station longitude' ordinal='10' />
              <column datatype='integer' name='bikeid' ordinal='11' />
              <column datatype='string' name='usertype' ordinal='12' />
              <column datatype='integer' name='birth year' ordinal='13' />
              <column datatype='integer' name='gender' ordinal='14' />
            </columns>
          </relation>
          <relation connection='textscan.13urbz71n8spju0zk1pfo0yxp6s3' name='JC-201809-citibike-tripdata.csv' table='[JC-201809-citibike-tripdata#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='tripduration' ordinal='0' />
              <column datatype='datetime' name='starttime' ordinal='1' />
              <column datatype='datetime' name='stoptime' ordinal='2' />
              <column datatype='integer' name='start station id' ordinal='3' />
              <column datatype='string' name='start station name' ordinal='4' />
              <column datatype='real' name='start station latitude' ordinal='5' />
              <column datatype='real' name='start station longitude' ordinal='6' />
              <column datatype='integer' name='end station id' ordinal='7' />
              <column datatype='string' name='end station name' ordinal='8' />
              <column datatype='real' name='end station latitude' ordinal='9' />
              <column datatype='real' name='end station longitude' ordinal='10' />
              <column datatype='integer' name='bikeid' ordinal='11' />
              <column datatype='string' name='usertype' ordinal='12' />
              <column datatype='integer' name='birth year' ordinal='13' />
              <column datatype='integer' name='gender' ordinal='14' />
            </columns>
          </relation>
          <relation connection='textscan.13urbz71n8spju0zk1pfo0yxp6s3' name='JC-201810-citibike-tripdata.csv' table='[JC-201810-citibike-tripdata#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='tripduration' ordinal='0' />
              <column datatype='datetime' name='starttime' ordinal='1' />
              <column datatype='datetime' name='stoptime' ordinal='2' />
              <column datatype='integer' name='start station id' ordinal='3' />
              <column datatype='string' name='start station name' ordinal='4' />
              <column datatype='real' name='start station latitude' ordinal='5' />
              <column datatype='real' name='start station longitude' ordinal='6' />
              <column datatype='integer' name='end station id' ordinal='7' />
              <column datatype='string' name='end station name' ordinal='8' />
              <column datatype='real' name='end station latitude' ordinal='9' />
              <column datatype='real' name='end station longitude' ordinal='10' />
              <column datatype='integer' name='bikeid' ordinal='11' />
              <column datatype='string' name='usertype' ordinal='12' />
              <column datatype='integer' name='birth year' ordinal='13' />
              <column datatype='integer' name='gender' ordinal='14' />
            </columns>
          </relation>
          <relation connection='textscan.13urbz71n8spju0zk1pfo0yxp6s3' name='JC-201811-citibike-tripdata.csv' table='[JC-201811-citibike-tripdata#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='tripduration' ordinal='0' />
              <column datatype='datetime' name='starttime' ordinal='1' />
              <column datatype='datetime' name='stoptime' ordinal='2' />
              <column datatype='integer' name='start station id' ordinal='3' />
              <column datatype='string' name='start station name' ordinal='4' />
              <column datatype='real' name='start station latitude' ordinal='5' />
              <column datatype='real' name='start station longitude' ordinal='6' />
              <column datatype='integer' name='end station id' ordinal='7' />
              <column datatype='string' name='end station name' ordinal='8' />
              <column datatype='real' name='end station latitude' ordinal='9' />
              <column datatype='real' name='end station longitude' ordinal='10' />
              <column datatype='integer' name='bikeid' ordinal='11' />
              <column datatype='string' name='usertype' ordinal='12' />
              <column datatype='integer' name='birth year' ordinal='13' />
              <column datatype='integer' name='gender' ordinal='14' />
            </columns>
          </relation>
          <relation connection='textscan.13urbz71n8spju0zk1pfo0yxp6s3' name='JC-201812-citibike-tripdata.csv' table='[JC-201812-citibike-tripdata#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='tripduration' ordinal='0' />
              <column datatype='datetime' name='starttime' ordinal='1' />
              <column datatype='datetime' name='stoptime' ordinal='2' />
              <column datatype='integer' name='start station id' ordinal='3' />
              <column datatype='string' name='start station name' ordinal='4' />
              <column datatype='real' name='start station latitude' ordinal='5' />
              <column datatype='real' name='start station longitude' ordinal='6' />
              <column datatype='integer' name='end station id' ordinal='7' />
              <column datatype='string' name='end station name' ordinal='8' />
              <column datatype='real' name='end station latitude' ordinal='9' />
              <column datatype='real' name='end station longitude' ordinal='10' />
              <column datatype='integer' name='bikeid' ordinal='11' />
              <column datatype='string' name='usertype' ordinal='12' />
              <column datatype='integer' name='birth year' ordinal='13' />
              <column datatype='integer' name='gender' ordinal='14' />
            </columns>
          </relation>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[JC-201801-citibike-tripdata.csv+]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tripduration</remote-name>
            <remote-type>20</remote-type>
            <local-name>[tripduration]</local-name>
            <parent-name>[JC-201801-citibike-tripdata.csv+]</parent-name>
            <remote-alias>tripduration</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>starttime</remote-name>
            <remote-type>135</remote-type>
            <local-name>[starttime]</local-name>
            <parent-name>[JC-201801-citibike-tripdata.csv+]</parent-name>
            <remote-alias>starttime</remote-alias>
            <ordinal>1</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>stoptime</remote-name>
            <remote-type>135</remote-type>
            <local-name>[stoptime]</local-name>
            <parent-name>[JC-201801-citibike-tripdata.csv+]</parent-name>
            <remote-alias>stoptime</remote-alias>
            <ordinal>2</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>start station id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[start station id]</local-name>
            <parent-name>[JC-201801-citibike-tripdata.csv+]</parent-name>
            <remote-alias>start station id</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>start station name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[start station name]</local-name>
            <parent-name>[JC-201801-citibike-tripdata.csv+]</parent-name>
            <remote-alias>start station name</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>start station latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[start station latitude]</local-name>
            <parent-name>[JC-201801-citibike-tripdata.csv+]</parent-name>
            <remote-alias>start station latitude</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>start station longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[start station longitude]</local-name>
            <parent-name>[JC-201801-citibike-tripdata.csv+]</parent-name>
            <remote-alias>start station longitude</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>end station id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[end station id]</local-name>
            <parent-name>[JC-201801-citibike-tripdata.csv+]</parent-name>
            <remote-alias>end station id</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>end station name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[end station name]</local-name>
            <parent-name>[JC-201801-citibike-tripdata.csv+]</parent-name>
            <remote-alias>end station name</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>end station latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[end station latitude]</local-name>
            <parent-name>[JC-201801-citibike-tripdata.csv+]</parent-name>
            <remote-alias>end station latitude</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>end station longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[end station longitude]</local-name>
            <parent-name>[JC-201801-citibike-tripdata.csv+]</parent-name>
            <remote-alias>end station longitude</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>bikeid</remote-name>
            <remote-type>20</remote-type>
            <local-name>[bikeid]</local-name>
            <parent-name>[JC-201801-citibike-tripdata.csv+]</parent-name>
            <remote-alias>bikeid</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>usertype</remote-name>
            <remote-type>129</remote-type>
            <local-name>[usertype]</local-name>
            <parent-name>[JC-201801-citibike-tripdata.csv+]</parent-name>
            <remote-alias>usertype</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>birth year</remote-name>
            <remote-type>7</remote-type>
            <local-name>[birth year]</local-name>
            <parent-name>[JC-201801-citibike-tripdata.csv+]</parent-name>
            <remote-alias>birth year</remote-alias>
            <ordinal>13</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gender</remote-name>
            <remote-type>20</remote-type>
            <local-name>[gender]</local-name>
            <parent-name>[JC-201801-citibike-tripdata.csv+]</parent-name>
            <remote-alias>gender</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Table Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Table Name]</local-name>
            <parent-name>[JC-201801-citibike-tripdata.csv+]</parent-name>
            <remote-alias>Table Name</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Age' datatype='integer' name='[Calculation_276408471744081920]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='DATEDIFF(&apos;year&apos;, [birth year], TODAY())' />
      </column>
      <column caption='Distance' datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Calculation_384494862279098368]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='3959 * ACOS&#13;&#10;(&#13;&#10;SIN(RADIANS([start station latitude])) * SIN(RADIANS([end station latitude])) +&#13;&#10;COS(RADIANS([start station latitude])) * COS(RADIANS([end station latitude])) * COS(RADIANS([end station longitude]) - RADIANS([start station longitude]))&#13;&#10;)' />
      </column>
      <column caption='TripdurationByMins' datatype='real' name='[Calculation_41658339405967360]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([tripduration])/60' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column aggregation='Sum' caption='Bikeid' datatype='integer' name='[bikeid]' role='dimension' type='ordinal' />
      <column caption='Birth Year' datatype='date' name='[birth year]' role='dimension' type='quantitative' />
      <column caption='End Station Id' datatype='integer' name='[end station id]' role='measure' type='quantitative' />
      <column aggregation='Avg' caption='End Station Latitude' datatype='real' name='[end station latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' caption='End Station Longitude' datatype='real' name='[end station longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='End Station Name' datatype='string' name='[end station name]' role='dimension' type='nominal' />
      <column aggregation='Sum' caption='Gender' datatype='integer' name='[gender]' role='dimension' type='ordinal'>
        <aliases>
          <alias key='1' value='Male' />
          <alias key='2' value='Female' />
        </aliases>
      </column>
      <column caption='Start Station Id' datatype='integer' name='[start station id]' role='measure' type='quantitative' />
      <column aggregation='Avg' caption='Start Station Latitude' datatype='real' name='[start station latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' caption='Start Station Longitude' datatype='real' name='[start station longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='Start Station Name' datatype='string' name='[start station name]' role='dimension' type='nominal' />
      <column caption='Starttime' datatype='datetime' name='[starttime]' role='dimension' type='ordinal' />
      <column caption='Stoptime' datatype='datetime' name='[stoptime]' role='dimension' type='ordinal' />
      <column aggregation='Count' caption='Tripduration' datatype='integer' name='[tripduration]' role='measure' type='quantitative' />
      <column caption='Usertype' datatype='string' name='[usertype]' role='dimension' type='nominal' />
      <column-instance column='[Calculation_41658339405967360]' derivation='Avg' name='[avg:Calculation_41658339405967360:qk]' pivot='key' type='quantitative' />
      <column-instance column='[tripduration]' derivation='Avg' name='[avg:tripduration:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Number of Records]' derivation='Count' name='[cnt:Number of Records:qk]' pivot='key' type='quantitative' />
      <column-instance column='[10BottomStartStation]' derivation='InOut' name='[io:10BottomStartStation:nk]' pivot='key' type='nominal'>
        <aliases>
          <alias key='true' value='Top10StartStation' />
        </aliases>
      </column-instance>
      <column-instance column='[Calculation_41658339405967360]' derivation='Median' name='[med:Calculation_41658339405967360:qk]' pivot='key' type='quantitative' />
      <column-instance column='[tripduration]' derivation='Median' name='[med:tripduration:qk]' pivot='key' type='quantitative' />
      <column-instance column='[starttime]' derivation='Month' name='[mn:starttime:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Calculation_276408471744081920]' derivation='None' name='[none:Calculation_276408471744081920:ok]' pivot='key' type='ordinal' />
      <column-instance column='[bikeid]' derivation='None' name='[none:bikeid:ok]' pivot='key' type='ordinal' />
      <column-instance column='[gender]' derivation='None' name='[none:gender:ok]' pivot='key' type='ordinal' />
      <column-instance column='[start station latitude]' derivation='None' name='[none:start station latitude:ok]' pivot='key' type='ordinal' />
      <column-instance column='[start station longitude]' derivation='None' name='[none:start station longitude:ok]' pivot='key' type='ordinal' />
      <column-instance column='[starttime]' derivation='Quarter' name='[qr:starttime:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Calculation_41658339405967360]' derivation='Sum' name='[sum:Calculation_41658339405967360:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
      <group caption='10TopStartStation' name='[10BottomStartStation]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end'>
          <groupfilter direction='DESC' expression='COUNT([start station name])' function='order' user:ui-marker='order'>
            <groupfilter function='level-members' level='[start station name]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </groupfilter>
        </groupfilter>
      </group>
      <group caption='10TopEndStation' name='[10TopEndStation]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
          <groupfilter direction='DESC' expression='COUNT([end station name])' function='order' user:ui-marker='order'>
            <groupfilter function='level-members' level='[end station name]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </groupfilter>
        </groupfilter>
      </group>
      <group caption='Action (Age)' hidden='true' name='[Action (Age)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Calculation_276408471744081920:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (Bikeid)' hidden='true' name='[Action (Bikeid)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:bikeid:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (Gender)' hidden='true' name='[Action (Gender)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[gender]' />
        </groupfilter>
      </group>
      <group caption='Action (QUARTER(Starttime),MONTH(Starttime))' hidden='true' name='[Action (QUARTER(Starttime),MONTH(Starttime))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[qr:starttime:ok]' />
          <groupfilter function='level-members' level='[mn:starttime:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (Start Station Latitude,Start Station Longitude)' hidden='true' name='[Action (Start Station Latitude,Start Station Longitude)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:start station latitude:ok]' />
          <groupfilter function='level-members' level='[none:start station longitude:ok]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.373436' group-percentage='0.163619' measure-ordering='alphabetic' measure-percentage='0.462945' show-aliased-fields='true' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:gender:ok]' type='palette'>
            <map to='#4e79a7'>
              <bucket>0</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>1</bucket>
            </map>
            <map to='#b882a6'>
              <bucket>2</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.019cx2c044cydd1dya39u1xqq341].[avg:tripduration:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.019cx2c044cydd1dya39u1xqq341].[med:tripduration:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.019cx2c044cydd1dya39u1xqq341]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.019cx2c044cydd1dya39u1xqq341].[avg:Calculation_41658339405967360:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.019cx2c044cydd1dya39u1xqq341].[med:Calculation_41658339405967360:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.019cx2c044cydd1dya39u1xqq341].[sum:Calculation_41658339405967360:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.019cx2c044cydd1dya39u1xqq341].[cnt:Number of Records:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.019cx2c044cydd1dya39u1xqq341].[sum:Number of Records:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[io:10BottomStartStation:nk]' type='palette'>
            <map to='#a2a2a2'>
              <bucket>false</bucket>
            </map>
            <map to='#e15759'>
              <bucket>true</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Filter1' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='10 TopStation'>
      <layout-options>
        <title>
          <formatted-text>
            <run>10 Top start Station</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='JC-201801-citibike-tripdata' name='federated.019cx2c044cydd1dya39u1xqq341' />
          </datasources>
          <datasource-dependencies datasource='federated.019cx2c044cydd1dya39u1xqq341'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column-instance column='[Number of Records]' derivation='Count' name='[cnt:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[starttime]' derivation='Hour' name='[hr:starttime:ok]' pivot='key' type='ordinal' />
            <column-instance column='[10BottomStartStation]' derivation='InOut' name='[io:10BottomStartStation:nk]' pivot='key' type='nominal'>
              <aliases>
                <alias key='true' value='Top10StartStation' />
              </aliases>
            </column-instance>
            <column-instance column='[start station name]' derivation='None' name='[none:start station name:nk]' pivot='key' type='nominal' />
            <column caption='Start Station Name' datatype='string' name='[start station name]' role='dimension' type='nominal' />
            <column caption='Starttime' datatype='datetime' name='[starttime]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.019cx2c044cydd1dya39u1xqq341].[hr:starttime:ok]'>
            <groupfilter from='0' function='range' level='[hr:starttime:ok]' to='23' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.019cx2c044cydd1dya39u1xqq341].[none:start station name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.019cx2c044cydd1dya39u1xqq341].[cnt:Number of Records:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.019cx2c044cydd1dya39u1xqq341].[hr:starttime:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.019cx2c044cydd1dya39u1xqq341].[none:start station name:nk]' value='15' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.019cx2c044cydd1dya39u1xqq341].[none:start station name:nk]' value='-90' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='poi-minor-secondary' value='true' />
            <format attr='enabled' id='poi-minor-primary' value='true' />
            <format attr='enabled' id='poi-main-monuments' value='true' />
            <format attr='enabled' id='poi-main-cemetery' value='true' />
            <format attr='enabled' id='poi-main-greenspace' value='true' />
            <format attr='enabled' id='poi-main-primary' value='true' />
            <format attr='enabled' id='poi-main-peaks' value='true' />
            <format attr='enabled' id='poi-rail' value='true' />
            <format attr='enabled' id='airport-label' value='true' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.019cx2c044cydd1dya39u1xqq341].[io:10BottomStartStation:nk]' />
              <text column='[federated.019cx2c044cydd1dya39u1xqq341].[io:10BottomStartStation:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.019cx2c044cydd1dya39u1xqq341].[cnt:Number of Records:qk]</rows>
        <cols>[federated.019cx2c044cydd1dya39u1xqq341].[none:start station name:nk]</cols>
      </table>
      <simple-id uuid='{9E4E0CB1-99F3-4B83-BE07-FD01648A11C8}' />
    </worksheet>
    <worksheet name='AvgDistance by a Bike'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#000000' fontname='Courier New' fontsize='16'>AVG distance that a bike is ridden</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='JC-201801-citibike-tripdata' name='federated.019cx2c044cydd1dya39u1xqq341' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.019cx2c044cydd1dya39u1xqq341'>
            <column caption='Distance' datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Calculation_384494862279098368]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='3959 * ACOS&#13;&#10;(&#13;&#10;SIN(RADIANS([start station latitude])) * SIN(RADIANS([end station latitude])) +&#13;&#10;COS(RADIANS([start station latitude])) * COS(RADIANS([end station latitude])) * COS(RADIANS([end station longitude]) - RADIANS([start station longitude]))&#13;&#10;)' />
            </column>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column-instance column='[Calculation_384494862279098368]' derivation='Avg' name='[avg:Calculation_384494862279098368:qk]' pivot='key' type='quantitative' />
            <column aggregation='Sum' caption='Bikeid' datatype='integer' name='[bikeid]' role='dimension' type='ordinal' />
            <column aggregation='Avg' caption='End Station Latitude' datatype='real' name='[end station latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='End Station Longitude' datatype='real' name='[end station longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column aggregation='Sum' caption='Gender' datatype='integer' name='[gender]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='1' value='Male' />
                <alias key='2' value='Female' />
              </aliases>
            </column>
            <column-instance column='[starttime]' derivation='Month' name='[mn:starttime:ok]' pivot='key' type='ordinal' />
            <column-instance column='[bikeid]' derivation='None' name='[none:bikeid:qk]' pivot='key' type='quantitative' />
            <column-instance column='[start station latitude]' derivation='None' name='[none:start station latitude:ok]' pivot='key' type='ordinal' />
            <column-instance column='[start station longitude]' derivation='None' name='[none:start station longitude:ok]' pivot='key' type='ordinal' />
            <column-instance column='[starttime]' derivation='Quarter' name='[qr:starttime:ok]' pivot='key' type='ordinal' />
            <column aggregation='Avg' caption='Start Station Latitude' datatype='real' name='[start station latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='Start Station Longitude' datatype='real' name='[start station longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column caption='Starttime' datatype='datetime' name='[starttime]' role='dimension' type='ordinal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.019cx2c044cydd1dya39u1xqq341].[Action (Gender)]'>
            <groupfilter function='level-members' level='[gender]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.019cx2c044cydd1dya39u1xqq341].[Action (QUARTER(Starttime),MONTH(Starttime))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[qr:starttime:ok]' />
              <groupfilter function='level-members' level='[mn:starttime:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.019cx2c044cydd1dya39u1xqq341].[Action (Start Station Latitude,Start Station Longitude)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:start station latitude:ok]' />
              <groupfilter function='level-members' level='[none:start station longitude:ok]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.019cx2c044cydd1dya39u1xqq341].[Action (Start Station Latitude,Start Station Longitude)]</column>
            <column>[federated.019cx2c044cydd1dya39u1xqq341].[Action (QUARTER(Starttime),MONTH(Starttime))]</column>
            <column>[federated.019cx2c044cydd1dya39u1xqq341].[Action (Gender)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.019cx2c044cydd1dya39u1xqq341].[avg:Calculation_384494862279098368:qk]' scope='rows' value='Avg. Distance (Mile)' />
            <encoding attr='space' class='0' field='[federated.019cx2c044cydd1dya39u1xqq341].[none:bikeid:qk]' field-type='quantitative' max='35200' min='14600' range-type='fixed' reverse='true' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.019cx2c044cydd1dya39u1xqq341].[avg:Calculation_384494862279098368:qk]' field-type='quantitative' max='1.7' min='0.29999999999999999' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.019cx2c044cydd1dya39u1xqq341].[sum:Number of Records:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.019cx2c044cydd1dya39u1xqq341].[avg:Calculation_384494862279098368:qk]</rows>
        <cols>[federated.019cx2c044cydd1dya39u1xqq341].[none:bikeid:qk]</cols>
      </table>
      <simple-id uuid='{903B4973-4F1C-446D-B9EC-EE8637CA705B}' />
    </worksheet>
    <worksheet name='Map'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#606b76' fontname='Courier New' fontsize='16'>Station&apos;s popularity </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='JC-201801-citibike-tripdata' name='federated.019cx2c044cydd1dya39u1xqq341' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.019cx2c044cydd1dya39u1xqq341'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column aggregation='Sum' caption='Bikeid' datatype='integer' name='[bikeid]' role='dimension' type='ordinal' />
            <column aggregation='Sum' caption='Gender' datatype='integer' name='[gender]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='1' value='Male' />
                <alias key='2' value='Female' />
              </aliases>
            </column>
            <column-instance column='[10BottomStartStation]' derivation='InOut' name='[io:10BottomStartStation:nk]' pivot='key' type='nominal'>
              <aliases>
                <alias key='true' value='Top10StartStation' />
              </aliases>
            </column-instance>
            <column-instance column='[starttime]' derivation='Month' name='[mn:starttime:ok]' pivot='key' type='ordinal' />
            <column-instance column='[bikeid]' derivation='None' name='[none:bikeid:ok]' pivot='key' type='ordinal' />
            <column-instance column='[start station latitude]' derivation='None' name='[none:start station latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[start station longitude]' derivation='None' name='[none:start station longitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[starttime]' derivation='Quarter' name='[qr:starttime:ok]' pivot='key' type='ordinal' />
            <column aggregation='Avg' caption='Start Station Latitude' datatype='real' name='[start station latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='Start Station Longitude' datatype='real' name='[start station longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column caption='Start Station Name' datatype='string' name='[start station name]' role='dimension' type='nominal' />
            <column caption='Starttime' datatype='datetime' name='[starttime]' role='dimension' type='ordinal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.019cx2c044cydd1dya39u1xqq341].[Action (Bikeid)]'>
            <groupfilter function='level-members' level='[none:bikeid:ok]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.019cx2c044cydd1dya39u1xqq341].[Action (Gender)]'>
            <groupfilter function='level-members' level='[gender]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.019cx2c044cydd1dya39u1xqq341].[Action (QUARTER(Starttime),MONTH(Starttime))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[qr:starttime:ok]' />
              <groupfilter function='level-members' level='[mn:starttime:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.019cx2c044cydd1dya39u1xqq341].[mn:starttime:ok]'>
            <groupfilter function='level-members' level='[mn:starttime:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.019cx2c044cydd1dya39u1xqq341].[mn:starttime:ok]</column>
            <column>[federated.019cx2c044cydd1dya39u1xqq341].[Action (Bikeid)]</column>
            <column>[federated.019cx2c044cydd1dya39u1xqq341].[Action (QUARTER(Starttime),MONTH(Starttime))]</column>
            <column>[federated.019cx2c044cydd1dya39u1xqq341].[Action (Gender)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.019cx2c044cydd1dya39u1xqq341].[none:start station longitude:qk]' field-type='quantitative' max='-8229490.4774107672' min='-8256921.3378859181' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.019cx2c044cydd1dya39u1xqq341].[none:start station latitude:qk]' field-type='quantitative' max='4974679.5517666833' min='4966588.7456640275' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' field='[federated.019cx2c044cydd1dya39u1xqq341].[io:10BottomStartStation:nk]' value='#aa0000' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='poi-minor-secondary' value='true' />
            <format attr='enabled' id='poi-minor-primary' value='true' />
            <format attr='enabled' id='poi-main-monuments' value='true' />
            <format attr='enabled' id='poi-main-cemetery' value='true' />
            <format attr='enabled' id='poi-main-greenspace' value='true' />
            <format attr='enabled' id='poi-main-primary' value='true' />
            <format attr='enabled' id='poi-main-peaks' value='true' />
            <format attr='enabled' id='poi-rail' value='true' />
            <format attr='enabled' id='airport-label' value='true' />
            <format attr='enabled' id='place-suburb' value='true' />
            <format attr='enabled' id='place-neighborhood' value='true' />
            <format attr='enabled' id='Zip Code Boundaries' value='true' />
            <format attr='enabled' id='Zip Code Labels' value='true' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.019cx2c044cydd1dya39u1xqq341].[io:10BottomStartStation:nk]' />
              <size column='[federated.019cx2c044cydd1dya39u1xqq341].[sum:Number of Records:qk]' />
              <text column='[federated.019cx2c044cydd1dya39u1xqq341].[io:10BottomStartStation:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='2.2057182788848877' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.019cx2c044cydd1dya39u1xqq341].[none:start station latitude:qk]</rows>
        <cols>[federated.019cx2c044cydd1dya39u1xqq341].[none:start station longitude:qk]</cols>
      </table>
      <simple-id uuid='{071E434E-2C6D-43E1-99A0-D72ADE6D1E1F}' />
    </worksheet>
    <worksheet name='Seasonal Trip'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#4e79a7'>Seasonal Trip </run>
            <run>Æ&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='JC-201801-citibike-tripdata' name='federated.019cx2c044cydd1dya39u1xqq341' />
          </datasources>
          <datasource-dependencies datasource='federated.019cx2c044cydd1dya39u1xqq341'>
            <column caption='TripdurationByMins' datatype='real' name='[Calculation_41658339405967360]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([tripduration])/60' />
            </column>
            <column-instance column='[tripduration]' derivation='Count' name='[cnt:tripduration:qk]' pivot='key' type='quantitative' />
            <column aggregation='Sum' caption='Gender' datatype='integer' name='[gender]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='1' value='Male' />
                <alias key='2' value='Female' />
              </aliases>
            </column>
            <column-instance column='[starttime]' derivation='Month' name='[mn:starttime:ok]' pivot='key' type='ordinal' />
            <column-instance column='[starttime]' derivation='Quarter' name='[qr:starttime:ok]' pivot='key' type='ordinal' />
            <column caption='Starttime' datatype='datetime' name='[starttime]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_41658339405967360]' derivation='Sum' name='[sum:Calculation_41658339405967360:qk]' pivot='key' type='quantitative' />
            <column aggregation='Count' caption='Tripduration' datatype='integer' name='[tripduration]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.019cx2c044cydd1dya39u1xqq341].[Action (Gender)]'>
            <groupfilter function='level-members' level='[gender]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.019cx2c044cydd1dya39u1xqq341].[qr:starttime:ok]'>
            <groupfilter from='1' function='range' level='[qr:starttime:ok]' to='4' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.019cx2c044cydd1dya39u1xqq341].[qr:starttime:ok]</column>
            <column>[federated.019cx2c044cydd1dya39u1xqq341].[Action (Gender)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.019cx2c044cydd1dya39u1xqq341].[mn:starttime:ok]' value='68' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.019cx2c044cydd1dya39u1xqq341].[qr:starttime:ok]' value='' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.019cx2c044cydd1dya39u1xqq341].[cnt:tripduration:qk]' />
              <tooltip column='[federated.019cx2c044cydd1dya39u1xqq341].[sum:Calculation_41658339405967360:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.019cx2c044cydd1dya39u1xqq341].[cnt:tripduration:qk]</rows>
        <cols>([federated.019cx2c044cydd1dya39u1xqq341].[qr:starttime:ok] / [federated.019cx2c044cydd1dya39u1xqq341].[mn:starttime:ok])</cols>
      </table>
      <simple-id uuid='{33AF36D6-0ABE-49C9-B75E-1A1B05EE1E0F}' />
    </worksheet>
    <worksheet name='StartTrip'>
      <layout-options>
        <title>
          <formatted-text>
            <run>StartTrip per hour versus TripDuration</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='JC-201801-citibike-tripdata' name='federated.019cx2c044cydd1dya39u1xqq341' />
          </datasources>
          <datasource-dependencies datasource='federated.019cx2c044cydd1dya39u1xqq341'>
            <column caption='TripdurationByMins' datatype='real' name='[Calculation_41658339405967360]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([tripduration])/60' />
            </column>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column aggregation='Sum' caption='Bikeid' datatype='integer' name='[bikeid]' role='dimension' type='ordinal' />
            <column aggregation='Sum' caption='Gender' datatype='integer' name='[gender]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='1' value='Male' />
                <alias key='2' value='Female' />
              </aliases>
            </column>
            <column-instance column='[starttime]' derivation='Hour' name='[hr:starttime:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_41658339405967360]' derivation='Median' name='[med:Calculation_41658339405967360:qk]' pivot='key' type='quantitative' />
            <column-instance column='[starttime]' derivation='Month' name='[mn:starttime:ok]' pivot='key' type='ordinal' />
            <column-instance column='[bikeid]' derivation='None' name='[none:bikeid:ok]' pivot='key' type='ordinal' />
            <column-instance column='[start station latitude]' derivation='None' name='[none:start station latitude:ok]' pivot='key' type='ordinal' />
            <column-instance column='[start station longitude]' derivation='None' name='[none:start station longitude:ok]' pivot='key' type='ordinal' />
            <column-instance column='[starttime]' derivation='Quarter' name='[qr:starttime:ok]' pivot='key' type='ordinal' />
            <column aggregation='Avg' caption='Start Station Latitude' datatype='real' name='[start station latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='Start Station Longitude' datatype='real' name='[start station longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column caption='Starttime' datatype='datetime' name='[starttime]' role='dimension' type='ordinal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column aggregation='Count' caption='Tripduration' datatype='integer' name='[tripduration]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.019cx2c044cydd1dya39u1xqq341].[Action (Bikeid)]'>
            <groupfilter function='level-members' level='[none:bikeid:ok]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.019cx2c044cydd1dya39u1xqq341].[Action (Gender)]'>
            <groupfilter function='level-members' level='[gender]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.019cx2c044cydd1dya39u1xqq341].[Action (QUARTER(Starttime),MONTH(Starttime))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[qr:starttime:ok]' />
              <groupfilter function='level-members' level='[mn:starttime:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.019cx2c044cydd1dya39u1xqq341].[Action (Start Station Latitude,Start Station Longitude)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:start station latitude:ok]' />
              <groupfilter function='level-members' level='[none:start station longitude:ok]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.019cx2c044cydd1dya39u1xqq341].[Action (Start Station Latitude,Start Station Longitude)]</column>
            <column>[federated.019cx2c044cydd1dya39u1xqq341].[Action (QUARTER(Starttime),MONTH(Starttime))]</column>
            <column>[federated.019cx2c044cydd1dya39u1xqq341].[Action (Bikeid)]</column>
            <column>[federated.019cx2c044cydd1dya39u1xqq341].[Action (Gender)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.019cx2c044cydd1dya39u1xqq341].[hr:starttime:qk]' field-type='quantitative' max='24' min='0' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.019cx2c044cydd1dya39u1xqq341].[sum:Number of Records:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.019cx2c044cydd1dya39u1xqq341].[hr:starttime:qk]' scope='cols' value='TripStartTime' />
            <format attr='title' class='0' field='[federated.019cx2c044cydd1dya39u1xqq341].[med:Calculation_41658339405967360:qk]' scope='rows' value='Median Tripduration(Mins)' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.019cx2c044cydd1dya39u1xqq341].[med:Calculation_41658339405967360:qk]' value='n#,##0.0;-#,##0.0' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='poi-minor-secondary' value='true' />
            <format attr='enabled' id='poi-minor-primary' value='true' />
            <format attr='enabled' id='poi-main-monuments' value='true' />
            <format attr='enabled' id='poi-main-cemetery' value='true' />
            <format attr='enabled' id='poi-main-greenspace' value='true' />
            <format attr='enabled' id='poi-main-primary' value='true' />
            <format attr='enabled' id='poi-main-peaks' value='true' />
            <format attr='enabled' id='poi-rail' value='true' />
            <format attr='enabled' id='airport-label' value='true' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.019cx2c044cydd1dya39u1xqq341].[sum:Number of Records:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.019cx2c044cydd1dya39u1xqq341].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='2.6408839225769043' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.019cx2c044cydd1dya39u1xqq341].[med:Calculation_41658339405967360:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <text column='[federated.019cx2c044cydd1dya39u1xqq341].[med:Calculation_41658339405967360:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.019cx2c044cydd1dya39u1xqq341].[med:Calculation_41658339405967360:qk] + [federated.019cx2c044cydd1dya39u1xqq341].[sum:Number of Records:qk])</rows>
        <cols>[federated.019cx2c044cydd1dya39u1xqq341].[hr:starttime:qk]</cols>
      </table>
      <simple-id uuid='{4A10DA19-E6BF-4FF1-A6CC-AC98375599C8}' />
    </worksheet>
    <worksheet name='Trip Gender'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Trip Gender distribution</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='JC-201801-citibike-tripdata' name='federated.019cx2c044cydd1dya39u1xqq341' />
          </datasources>
          <datasource-dependencies datasource='federated.019cx2c044cydd1dya39u1xqq341'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column aggregation='Sum' caption='Bikeid' datatype='integer' name='[bikeid]' role='dimension' type='ordinal' />
            <column aggregation='Sum' caption='Gender' datatype='integer' name='[gender]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='1' value='Male' />
                <alias key='2' value='Female' />
              </aliases>
            </column>
            <column-instance column='[starttime]' derivation='Month' name='[mn:starttime:ok]' pivot='key' type='ordinal' />
            <column-instance column='[bikeid]' derivation='None' name='[none:bikeid:ok]' pivot='key' type='ordinal' />
            <column-instance column='[gender]' derivation='None' name='[none:gender:ok]' pivot='key' type='ordinal' />
            <column-instance column='[start station latitude]' derivation='None' name='[none:start station latitude:ok]' pivot='key' type='ordinal' />
            <column-instance column='[start station longitude]' derivation='None' name='[none:start station longitude:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[pcto:sum:Number of Records:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[starttime]' derivation='Quarter' name='[qr:starttime:ok]' pivot='key' type='ordinal' />
            <column aggregation='Avg' caption='Start Station Latitude' datatype='real' name='[start station latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='Start Station Longitude' datatype='real' name='[start station longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column caption='Starttime' datatype='datetime' name='[starttime]' role='dimension' type='ordinal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.019cx2c044cydd1dya39u1xqq341].[Action (Bikeid)]'>
            <groupfilter function='level-members' level='[none:bikeid:ok]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.019cx2c044cydd1dya39u1xqq341].[Action (QUARTER(Starttime),MONTH(Starttime))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[qr:starttime:ok]' />
              <groupfilter function='level-members' level='[mn:starttime:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.019cx2c044cydd1dya39u1xqq341].[Action (Start Station Latitude,Start Station Longitude)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:start station latitude:ok]' />
              <groupfilter function='level-members' level='[none:start station longitude:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.019cx2c044cydd1dya39u1xqq341].[none:gender:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:gender:ok]' member='1' />
              <groupfilter function='member' level='[none:gender:ok]' member='2' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.019cx2c044cydd1dya39u1xqq341].[none:gender:ok]</column>
            <column>[federated.019cx2c044cydd1dya39u1xqq341].[Action (Start Station Latitude,Start Station Longitude)]</column>
            <column>[federated.019cx2c044cydd1dya39u1xqq341].[Action (QUARTER(Starttime),MONTH(Starttime))]</column>
            <column>[federated.019cx2c044cydd1dya39u1xqq341].[Action (Bikeid)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.019cx2c044cydd1dya39u1xqq341].[none:gender:ok]' />
              <size column='[federated.019cx2c044cydd1dya39u1xqq341].[sum:Number of Records:qk]' />
              <wedge-size column='[federated.019cx2c044cydd1dya39u1xqq341].[sum:Number of Records:qk]' />
              <text column='[federated.019cx2c044cydd1dya39u1xqq341].[none:gender:ok]' />
              <text column='[federated.019cx2c044cydd1dya39u1xqq341].[pcto:sum:Number of Records:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{EBA021DE-9C6A-4AED-A689-5F7785486DD3}' />
    </worksheet>
    <worksheet name='Trip per Age'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#4e79a7'>Tripduration by Age</run>
            <run>Æ&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='JC-201801-citibike-tripdata' name='federated.019cx2c044cydd1dya39u1xqq341' />
          </datasources>
          <datasource-dependencies datasource='federated.019cx2c044cydd1dya39u1xqq341'>
            <column caption='Age' datatype='integer' name='[Calculation_276408471744081920]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='DATEDIFF(&apos;year&apos;, [birth year], TODAY())' />
            </column>
            <column caption='TripdurationByMins' datatype='real' name='[Calculation_41658339405967360]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([tripduration])/60' />
            </column>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column-instance column='[Calculation_41658339405967360]' derivation='Avg' name='[avg:Calculation_41658339405967360:qk]' pivot='key' type='quantitative' />
            <column aggregation='Sum' caption='Bikeid' datatype='integer' name='[bikeid]' role='dimension' type='ordinal' />
            <column caption='Birth Year' datatype='date' name='[birth year]' role='dimension' type='quantitative' />
            <column aggregation='Sum' caption='Gender' datatype='integer' name='[gender]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='1' value='Male' />
                <alias key='2' value='Female' />
              </aliases>
            </column>
            <column-instance column='[starttime]' derivation='Month' name='[mn:starttime:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_276408471744081920]' derivation='None' name='[none:Calculation_276408471744081920:qk]' pivot='key' type='quantitative' />
            <column-instance column='[bikeid]' derivation='None' name='[none:bikeid:ok]' pivot='key' type='ordinal' />
            <column-instance column='[start station latitude]' derivation='None' name='[none:start station latitude:ok]' pivot='key' type='ordinal' />
            <column-instance column='[start station longitude]' derivation='None' name='[none:start station longitude:ok]' pivot='key' type='ordinal' />
            <column-instance column='[starttime]' derivation='Quarter' name='[qr:starttime:ok]' pivot='key' type='ordinal' />
            <column aggregation='Avg' caption='Start Station Latitude' datatype='real' name='[start station latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='Start Station Longitude' datatype='real' name='[start station longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column caption='Starttime' datatype='datetime' name='[starttime]' role='dimension' type='ordinal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column aggregation='Count' caption='Tripduration' datatype='integer' name='[tripduration]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.019cx2c044cydd1dya39u1xqq341].[Action (Bikeid)]'>
            <groupfilter function='level-members' level='[none:bikeid:ok]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.019cx2c044cydd1dya39u1xqq341].[Action (Gender)]'>
            <groupfilter function='level-members' level='[gender]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.019cx2c044cydd1dya39u1xqq341].[Action (QUARTER(Starttime),MONTH(Starttime))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[qr:starttime:ok]' />
              <groupfilter function='level-members' level='[mn:starttime:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.019cx2c044cydd1dya39u1xqq341].[Action (Start Station Latitude,Start Station Longitude)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:start station latitude:ok]' />
              <groupfilter function='level-members' level='[none:start station longitude:ok]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.019cx2c044cydd1dya39u1xqq341].[Action (Start Station Latitude,Start Station Longitude)]</column>
            <column>[federated.019cx2c044cydd1dya39u1xqq341].[Action (QUARTER(Starttime),MONTH(Starttime))]</column>
            <column>[federated.019cx2c044cydd1dya39u1xqq341].[Action (Bikeid)]</column>
            <column>[federated.019cx2c044cydd1dya39u1xqq341].[Action (Gender)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.019cx2c044cydd1dya39u1xqq341].[none:Calculation_276408471744081920:qk]' field-type='quantitative' max='90' min='6' range-type='fixed' scope='cols' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane id='10' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.019cx2c044cydd1dya39u1xqq341].[sum:Number of Records:qk]' />
              <lod column='[federated.019cx2c044cydd1dya39u1xqq341].[sum:Number of Records:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.019cx2c044cydd1dya39u1xqq341].[avg:Calculation_41658339405967360:qk]</rows>
        <cols>[federated.019cx2c044cydd1dya39u1xqq341].[none:Calculation_276408471744081920:qk]</cols>
      </table>
      <simple-id uuid='{061283A1-D568-4C30-AA45-9CE984DC2EBE}' />
    </worksheet>
    <worksheet name='utilization by bike'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Utilization by bike ID</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='JC-201801-citibike-tripdata' name='federated.019cx2c044cydd1dya39u1xqq341' />
          </datasources>
          <datasource-dependencies datasource='federated.019cx2c044cydd1dya39u1xqq341'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column aggregation='Sum' caption='Bikeid' datatype='integer' name='[bikeid]' role='dimension' type='ordinal' />
            <column-instance column='[bikeid]' derivation='None' name='[none:bikeid:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='color' value='#ffffff' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='color' value='#ffffff' />
          </style-rule>
          <style-rule element='title'>
            <format attr='color' value='#ffffff' />
          </style-rule>
          <style-rule element='tooltip'>
            <format attr='color' value='#ffffff' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.019cx2c044cydd1dya39u1xqq341].[sum:Number of Records:qk]' />
              <size column='[federated.019cx2c044cydd1dya39u1xqq341].[sum:Number of Records:qk]' />
              <text column='[federated.019cx2c044cydd1dya39u1xqq341].[none:bikeid:ok]' />
            </encodings>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='user' />
                <format attr='font-size' value='8' />
                <format attr='color' value='#ffffff' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-range-scope' value='table' />
                <format attr='mark-labels-range-min' value='false' />
                <format attr='mark-labels-range-field' value='[federated.019cx2c044cydd1dya39u1xqq341].[none:bikeid:ok]' />
                <format attr='mark-labels-mode' value='all' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{77FDA784-1A1B-4932-95CA-4770371D6D34}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 1'>
      <style>
        <style-rule element='dash-subtitle'>
          <format attr='background-color' value='#ffffff' />
        </style-rule>
      </style>
      <size sizing-mode='automatic' />
      <datasources>
        <datasource caption='JC-201801-citibike-tripdata' name='federated.019cx2c044cydd1dya39u1xqq341' />
      </datasources>
      <datasource-dependencies datasource='federated.019cx2c044cydd1dya39u1xqq341'>
        <column-instance column='[starttime]' derivation='Month' name='[mn:starttime:ok]' pivot='key' type='ordinal' />
        <column caption='Starttime' datatype='datetime' name='[starttime]' role='dimension' type='ordinal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98712' id='16' param='horz' type='layout-flow' w='99176' x='412' y='644'>
            <zone h='98712' id='14' type='layout-basic' w='99176' x='412' y='644'>
              <zone h='98712' id='11' type='empty' w='99176' x='412' y='644'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='34380' id='20' name='Map' w='65412' x='412' y='6924' />
        <zone h='5797' id='21' mode='slider' name='Map' param='[federated.019cx2c044cydd1dya39u1xqq341].[mn:starttime:ok]' type='filter' w='32526' x='15309' y='644' />
        <zone h='33333' id='22' name='StartTrip' w='33299' x='412' y='41787' />
        <zone h='30113' id='23' name='Trip Gender' w='21495' x='67371' y='10950' />
        <zone h='6119' id='24' name='Trip Gender' pane-specification-id='0' param='[federated.019cx2c044cydd1dya39u1xqq341].[none:gender:ok]' type='color' w='7216' x='82526' y='15942' />
        <zone h='27858' id='25' name='Seasonal Trip' w='33299' x='36443' y='43076' />
        <zone h='24074' id='26' name='Trip per Age' w='33299' x='412' y='75684' />
        <zone h='8052' id='27' name='Trip per Age' pane-specification-id='10' param='[federated.019cx2c044cydd1dya39u1xqq341].[sum:Number of Records:qk]' type='color' w='7216' x='25103' y='74638' />
        <zone h='23752' id='28' name='AvgDistance by a Bike' w='33299' x='37680' y='74960' />
        <zone forceUpdate='true' h='41385' id='35' type='text' w='29278' x='70773' y='38728'>
          <formatted-text>
            <run fontcolor='#4e79a7' fontsize='15'>Per our dataset, we analyzed that majority of bike riders are males by 77% versus 23% of females. also we can see the popular stations in ??? and in the fall, people rent bikes more than other seasons. </run>
            <run>Æ&#10;</run>
            <run fontcolor='#4e79a7' fontsize='15'>seems like 7-10AM and 17-19 PM are the rush hours which is matching with the business rush hours.</run>
          </formatted-text>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1750' minheight='1750' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='38' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='98712' id='39' param='vert' type='layout-flow' w='99176' x='412' y='644'>
                <zone h='5797' id='21' mode='slider' name='Map' param='[federated.019cx2c044cydd1dya39u1xqq341].[mn:starttime:ok]' type='filter' w='32526' x='15309' y='644'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='275' h='34380' id='20' is-fixed='true' name='Map' w='65412' x='412' y='6924'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='241' h='30113' id='23' is-fixed='true' name='Trip Gender' w='21495' x='67371' y='10950'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6119' id='24' name='Trip Gender' pane-specification-id='0' param='[federated.019cx2c044cydd1dya39u1xqq341].[none:gender:ok]' type='color' w='7216' x='82526' y='15942'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='41385' id='35' type='text' w='29278' x='70773' y='38728'>
                  <formatted-text>
                    <run fontcolor='#4e79a7' fontsize='15'>Per our dataset, we analyzed that majority of bike riders are males by 77% versus 23% of females. also we can see the popular stations in ??? and in the fall, people rent bikes more than other seasons. </run>
                    <run>Æ&#10;</run>
                    <run fontcolor='#4e79a7' fontsize='15'>seems like 7-10AM and 17-19 PM are the rush hours which is matching with the business rush hours.</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='267' h='33333' id='22' is-fixed='true' name='StartTrip' w='33299' x='412' y='41787'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='222' h='27858' id='25' is-fixed='true' name='Seasonal Trip' w='33299' x='36443' y='43076'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='190' h='23752' id='28' is-fixed='true' name='AvgDistance by a Bike' w='33299' x='37680' y='74960'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='193' h='24074' id='26' is-fixed='true' name='Trip per Age' w='33299' x='412' y='75684'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8052' id='27' name='Trip per Age' pane-specification-id='10' param='[federated.019cx2c044cydd1dya39u1xqq341].[sum:Number of Records:qk]' type='color' w='7216' x='25103' y='74638'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{55F26195-84C0-4C2E-A0E3-266C2FED27A3}' />
    </dashboard>
    <dashboard name='Story 1' type='storyboard'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98712' id='1' param='vert' removable='false' type='layout-flow' w='99176' x='412' y='644'>
            <zone h='4026' id='3' type='title' w='99176' x='412' y='644' />
            <zone h='8132' id='4' is-fixed='true' paired-zone-id='5' removable='false' type='flipboard-nav' w='99176' x='412' y='4670' />
            <zone h='86554' id='5' paired-zone-id='4' removable='false' type='flipboard' w='99176' x='412' y='12802'>
              <flipboard active-id='6' nav-type='caption' show-nav-arrows='true'>
                <story-points>
                  <story-point caption='Rush hours vs trip duration' captured-sheet='StartTrip' id='3' />
                  <story-point caption='Top popular stations' captured-sheet='10 TopStation' id='4' />
                  <story-point caption='Utilization by BikeID' captured-sheet='utilization by bike' id='5'>
                    <capturedDeltas>
                      <worksheet name='utilization by bike'>
                        <selection-collection>
                          <tuple-selection>
                            <tuple-reference>
                              <tuple-descriptor>
                                <pane-descriptor>
                                  <x-fields />
                                  <y-fields />
                                </pane-descriptor>
                                <columns>
                                  <field>[federated.019cx2c044cydd1dya39u1xqq341].[none:bikeid:ok]</field>
                                  <field>[federated.019cx2c044cydd1dya39u1xqq341].[sum:Number of Records:qk]</field>
                                </columns>
                              </tuple-descriptor>
                              <tuple>
                                <value>33651</value>
                                <value>556</value>
                              </tuple>
                            </tuple-reference>
                          </tuple-selection>
                        </selection-collection>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='AvgDistance per bike' captured-sheet='AvgDistance by a Bike' id='6' />
                </story-points>
              </flipboard>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <simple-id uuid='{805991BB-84F3-431F-AA9F-8A9316E91051}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.5' source-height='44'>
    <window class='worksheet' name='Trip Gender'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.019cx2c044cydd1dya39u1xqq341].[none:gender:ok]' type='color' />
            <card pane-specification-id='0' param='[federated.019cx2c044cydd1dya39u1xqq341].[sum:Number of Records:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.019cx2c044cydd1dya39u1xqq341].[none:gender:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{01BE648C-34A9-46CB-AEDF-CD2372B73011}' />
    </window>
    <window class='worksheet' name='StartTrip'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.019cx2c044cydd1dya39u1xqq341].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.019cx2c044cydd1dya39u1xqq341].[avg:tripduration:qk]</field>
            <field>[federated.019cx2c044cydd1dya39u1xqq341].[hr:stoptime:ok]</field>
            <field>[federated.019cx2c044cydd1dya39u1xqq341].[io:10BottomStartStation:nk]</field>
            <field>[federated.019cx2c044cydd1dya39u1xqq341].[yr:starttime:ok]</field>
            <field>[federated.019cx2c044cydd1dya39u1xqq341].[yr:stoptime:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{E4BC73E3-BF86-459B-A8FF-E09C58A323CF}' />
    </window>
    <window class='worksheet' name='10 TopStation'>
      <cards>
        <edge name='left'>
          <strip size='284'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <tuple-selection>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.019cx2c044cydd1dya39u1xqq341].[none:start station name:nk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.019cx2c044cydd1dya39u1xqq341].[cnt:Number of Records:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.019cx2c044cydd1dya39u1xqq341].[cnt:Number of Records:qk]</field>
                  <field>[federated.019cx2c044cydd1dya39u1xqq341].[io:10BottomStartStation:nk]</field>
                  <field>[federated.019cx2c044cydd1dya39u1xqq341].[none:start station name:nk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>12105</value>
                <value>true</value>
                <value>&quot;Harborside&quot;</value>
              </tuple>
            </tuple-reference>
          </tuple-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.019cx2c044cydd1dya39u1xqq341].[avg:tripduration:qk]</field>
            <field>[federated.019cx2c044cydd1dya39u1xqq341].[hr:starttime:ok]</field>
            <field>[federated.019cx2c044cydd1dya39u1xqq341].[hr:stoptime:ok]</field>
            <field>[federated.019cx2c044cydd1dya39u1xqq341].[io:10TopEndStation:nk]</field>
            <field>[federated.019cx2c044cydd1dya39u1xqq341].[none:end station name:nk]</field>
            <field>[federated.019cx2c044cydd1dya39u1xqq341].[none:start station name:nk]</field>
            <field>[federated.019cx2c044cydd1dya39u1xqq341].[yr:starttime:ok]</field>
            <field>[federated.019cx2c044cydd1dya39u1xqq341].[yr:stoptime:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{94C464CD-CB4F-4753-8E0A-B53E98E0C1B9}' />
    </window>
    <window class='worksheet' name='Seasonal Trip'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.019cx2c044cydd1dya39u1xqq341].[mn:starttime:ok]</field>
            <field>[federated.019cx2c044cydd1dya39u1xqq341].[none:usertype:nk]</field>
            <field>[federated.019cx2c044cydd1dya39u1xqq341].[tqr:starttime:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5C797CCC-63F3-489B-99B7-4964060B9130}' />
    </window>
    <window class='worksheet' name='Trip per Age'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='10' param='[federated.019cx2c044cydd1dya39u1xqq341].[sum:Number of Records:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.019cx2c044cydd1dya39u1xqq341].[mn:starttime:ok]</field>
            <field>[federated.019cx2c044cydd1dya39u1xqq341].[none:bikeid:ok]</field>
            <field>[federated.019cx2c044cydd1dya39u1xqq341].[none:birth year:qk]</field>
            <field>[federated.019cx2c044cydd1dya39u1xqq341].[none:usertype:nk]</field>
            <field>[federated.019cx2c044cydd1dya39u1xqq341].[qr:starttime:ok]</field>
            <field>[federated.019cx2c044cydd1dya39u1xqq341].[tqr:starttime:qk]</field>
            <field>[federated.019cx2c044cydd1dya39u1xqq341].[tyr:birth year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{FF14A1EE-3604-4531-8642-D7889CCBA4F2}' />
    </window>
    <window class='worksheet' name='Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='slider' param='[federated.019cx2c044cydd1dya39u1xqq341].[mn:starttime:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.019cx2c044cydd1dya39u1xqq341].[sum:Number of Records:qk]' type='size' />
            <card pane-specification-id='0' param='[federated.019cx2c044cydd1dya39u1xqq341].[io:10BottomStartStation:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.019cx2c044cydd1dya39u1xqq341].[io:10BottomStartStation:nk]</field>
            <field>[federated.019cx2c044cydd1dya39u1xqq341].[mn:starttime:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{289D666D-DB68-45EA-BC81-D6D78D44F20D}' />
    </window>
    <window class='worksheet' name='AvgDistance by a Bike'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.019cx2c044cydd1dya39u1xqq341].[sum:Number of Records:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{2FCAE157-4320-4C08-878A-BE4E77B09E80}' />
    </window>
    <window class='worksheet' name='utilization by bike'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.019cx2c044cydd1dya39u1xqq341].[sum:Number of Records:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.019cx2c044cydd1dya39u1xqq341].[none:bikeid:ok]</field>
            <field>[federated.019cx2c044cydd1dya39u1xqq341].[none:bikeid:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{28EB2E49-A305-460C-A0C2-097A942D251B}' />
    </window>
    <window class='dashboard' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='AvgDistance by a Bike'>
          <zoom type='entire-view' />
          <selection-collection>
            <tuple-selection>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[federated.019cx2c044cydd1dya39u1xqq341].[none:bikeid:qk]</field>
                    </x-fields>
                    <y-fields>
                      <field>[federated.019cx2c044cydd1dya39u1xqq341].[avg:Calculation_384494862279098368:qk]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[federated.019cx2c044cydd1dya39u1xqq341].[avg:Calculation_384494862279098368:qk]</field>
                    <field>[federated.019cx2c044cydd1dya39u1xqq341].[none:bikeid:qk]</field>
                    <field>[federated.019cx2c044cydd1dya39u1xqq341].[sum:Number of Records:qk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>0.63417473138682801</value>
                  <value>30964</value>
                  <value>30</value>
                </tuple>
              </tuple-reference>
            </tuple-selection>
          </selection-collection>
        </viewpoint>
        <viewpoint name='Map'>
          <zoom type='entire-view' />
          <highlight field='[federated.019cx2c044cydd1dya39u1xqq341].[io:10BottomStartStation:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Seasonal Trip'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='StartTrip'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Trip Gender'>
          <zoom type='entire-view' />
          <highlight field='[federated.019cx2c044cydd1dya39u1xqq341].[none:gender:ok]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Trip per Age'>
          <zoom type='entire-view' />
          <selection-collection>
            <node-selection select-tuples='false'>
              <oriented-node-reference orientation='horizontal'>
                <node-reference>
                  <axis>[federated.019cx2c044cydd1dya39u1xqq341].[none:Calculation_276408471744081920:qk]</axis>
                </node-reference>
                <page-reference />
              </oriented-node-reference>
            </node-selection>
          </selection-collection>
        </viewpoint>
      </viewpoints>
      <active id='11' />
      <simple-id uuid='{BE4A50D5-539B-4772-8946-2DEA3C099772}' />
    </window>
    <window class='dashboard' maximized='true' name='Story 1'>
      <viewpoints />
      <active id='4' />
      <simple-id uuid='{BA06EF7F-A0A6-4894-9302-FD59BAAE55C4}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='10 TopStation' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='AvgDistance by a Bike' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Map' width='192'>
      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
      9dRjA3kAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Seasonal Trip' width='192'>
      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
      P4MZpZI/6oHgAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='StartTrip' width='192'>
      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
      I08p/j96n/SQMTRqNgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Story 1' width='192'>
      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
      CBIARKQD4J8BGjuTH4XTbbYAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Trip Gender' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Trip per Age' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='utilization by bike' width='192'>
      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
      OEv6XEX91gAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
